this表示当前上下文(context)即对调用者的引用

函数作用域
  词法作用域
     javascript的函数是在局部作用域内运行的,在局部作用域内运行的函数体可以访问其外层
     (可能是全局作用域)的变量和函数
     javascript的作用域是词法作用域
     所谓词法作用域是说其作用域在定义时(词法分析时)就确定下来了,而并非在执行时确定
     01.js

  javascript中在所有函数之外声明的变量都是全局变量
  而在函数内部声明的变量(通过var关键字声明)为局部变量
  事实上全局变量是全局对象的属性  全局函数是全局对象的属性

  局部变量又隶属于什么对象？就是调用对象(又称活动对象this)
  在执行一个函数时，函数的参数和局部变量会作为调用对象的属性进行存储
  同时,解释器会为函数创建一个执行上下文,与执行上下文对应起来的是作用域链

  作用域链是关于作用域的链,通常实现为一个链表,链表的每一个项都是一个对象
  在全局作用域中，该链中有且只有一个对象,即全局对象
  对应的,在一个函数中,作用域链上会有两个对象,第一个为调用对象,第二个为全局对象

  函数上下文是可以变化,通过Function对象的call或apply来修改函数的执行上下文

  在Java或c/c++等语言中,方法(函数)只能依附于对象而存在不是独立的.
  而在Javascript中函数也是一种对象 并非其他任何对象一部分

闭包
